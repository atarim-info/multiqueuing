<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>310</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>590</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>240</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>630</y>
      <w>540</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.broker::QueueManagerImpl
--
-LOG = LoggerFactory.getLogger(QueueManagerImpl.class): Logger
-DEFAULT_THREAD_COUNT = 5: int
-queueName2IDMap: Map&lt;String, UUID&gt;
-queueMap: Map&lt;UUID, MessageQueue&lt;T&gt;&gt;
-queueConsumersMap: Map&lt;UUID, MessageConsumer&lt;T&gt;&gt;
-threadPool: ThreadPool
-stop = true: boolean
--
+QueueManagerImpl(): ctor
+QueueManagerImpl(ThreadPool threadPool): ctor
+start(): void
+stop(): void
-retriveMessages(UUID queueId, MessageQueue&lt;T&gt; messageQueue): void
+createQueue(String name): MessageQueue&lt;T&gt;
+getQueue(String queueName): MessageQueue&lt;T&gt;
+getConsumer(String queueName): MessageConsumer&lt;T&gt;
+isQueueHasConsumer(String queueName): boolean
+getQueuesCount(): int
+offer(String queueName, Message&lt;T&gt; message): void
+setConsumer(final String queueName, final MessageConsumer&lt;T&gt; consumer): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>350</y>
      <w>550</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.broker::MessageBrokerImpl
--
-LOG = LoggerFactory.getLogger(MessageBrokerImpl.class): Logger
-threadPool: ThreadPool
-queueManager: QueueManager&lt;T&gt;
--
+MessageBrokerImpl(ThreadPool threadPool): ctor
+subcribe(String queueName, MessageConsumer&lt;T&gt; consumer): MessageQueue&lt;T&gt;
+createQueue(String name): MessageQueue&lt;T&gt;
+getQueuesCount(): int
+stop(): void
+start(): void
+offer(String queueName, Message&lt;T&gt; message): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>570</y>
      <w>460</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.broker::MessageQueueImpl
--
-name: String
-queueId: UUID
-messageQueue = new LinkedBlockingQueue(): Queue&lt;Message&lt;T&gt;&gt;
--
+MessageQueueImpl(String name): ctor
+getName(): String
+getQueueId(): UUID
+offer(Message&lt;T&gt; e): boolean
+poll(): Message&lt;T&gt;
+size(): int
+isEmpty(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>370</y>
      <w>480</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
info.atarim.multiqueuing.broker::QueueManager
--
--
~createQueue(String name): MessageQueue&lt;T&gt;
~getQueue(String name): MessageQueue&lt;T&gt;
~offer(String queueName, Message&lt;T&gt; message): void
~getQueuesCount(): int
~setConsumer(String queueName, MessageConsumer&lt;T&gt; consumer): void
~isQueueHasConsumer(String queueName): boolean
~getConsumer(String queueName): MessageConsumer&lt;T&gt;
~stop(): void
~start(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>140</y>
      <w>490</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.concurrent::ThreadPool
--
-threadCount: int
-parentThreads = new HashSet(): Set&lt;Thread&gt;
-threadCollection = new HashMap(): Map&lt;Thread, Thread&gt;
-thisInstance: ThreadPool
--
-ThreadPool(int threadCount): ctor
+createThreadPoll(int threadCount): ThreadPool
+runInThread(Thread parentThread, Runnable runnable, String label): Thread
-createThread(Thread parentThread, Runnable runnable, String label): Thread
-checkAvilability(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>140</y>
      <w>550</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
info.atarim.multiqueuing.broker::MessageBroker
--
--
~subcribe(String queueName, MessageConsumer&lt;T&gt; consumer): MessageQueue&lt;T&gt;
~createQueue(String name): MessageQueue&lt;T&gt;
~getQueuesCount(): int
~stop(): void
~start(): void
~offer(String queueName, Message&lt;T&gt; message): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>360</y>
      <w>320</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
info.atarim.multiqueuing.broker::MessageQueue
--
--
~getName(): String
~getQueueId(): UUID
~offer(Message&lt;T&gt; e): boolean
~poll(): Message&lt;T&gt;
~size(): int
~isEmpty(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>870</y>
      <w>350</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.broker::Message
--
~sender: UserData
~messagePayload: T
--
+Message(UserData sender, T messagePayload): ctor
+getSender(): UserData
+getMessagePayload(): T
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>730</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.data::UserData
--
~userId: String
~origin: T
--
+UserData(String userId, T origin): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>340</x>
      <y>0</y>
      <w>400</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.broker::MessageBrokerFactory
--
--
-MessageBrokerFactory(): ctor
+createMessageBroker(int threadCount): MessageBroker&lt;T&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>870</y>
      <w>340</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
info.atarim.multiqueuing.broker::MessageConsumer
--
--
~accept(Message&lt;T&gt; message): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>610</y>
      <w>290</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.data::UserRequest
--
-userData: UserData
-details: Details
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>150</x>
      <y>1170</y>
      <w>460</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.exceptions::ConsumerAlreadyExistsException
--
-serialVersionUID = 6232771714589746748L: long
--
+ConsumerAlreadyExistsException(String name): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1070</x>
      <y>1170</y>
      <w>440</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.exceptions::QueueAlreadyExistsException
--
-serialVersionUID = 6232771714589746748L: long
--
+QueueAlreadyExistsException(String name): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>1170</y>
      <w>410</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.exceptions::QueueNotExistsException
--
-serialVersionUID = -7841846715828280259L: long
--
+QueueNotExistsException(String name): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>1050</y>
      <w>390</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/info.atarim.multiqueuing.exceptions::MultiQueuingException/
--
--
+MultiQueuingException(String message): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>630</y>
      <w>250</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>info.atarim.multiqueuing.data::Details
--
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>440</y>
      <w>100</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;270.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>720</y>
      <w>100</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1360</x>
      <y>530</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>1110</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>1110</y>
      <w>350</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>330.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>820</x>
      <y>1110</y>
      <w>480</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;460.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>650</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>690</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>830</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
